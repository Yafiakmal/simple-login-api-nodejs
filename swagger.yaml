openapi: 3.0.0
info:
  title: Login Apps With Node Js
  version: 1.0.0
  description: API untuk authentikasi pengguna.
servers:
  - url: http://localhost:3000/
    description: Server Development - user data
  - url: http://localhost:3000/auth
    description: Server Development - authentication
paths:
  /auth/register:
    post:
      summary: Membuat User Baru dan Mengirim Email verifikasi
      description: |-
        jika user belum ada server akan membuat user baru ke database dengan is_verified = false.
        kemudian mengirimkan email ke email user untuk verifikasi.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        "201":
          description: Registrasi berhasil, link verifikasi dikirim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registrasi berhasil. Link verifikasi telah dikirim ke email Anda."
        "400":
          description: Permintaan tidak valid (misalnya, format data salah)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bad Request
        "409":
          description: Pengguna sudah terdaftar
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterConflict"
        "500":
          description: Kesalahan server internal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Terjadi kesalahan pada server, coba lagi nanti."
  /auth/verify/{token}:
    patch:
      summary: Verifikasi email yang didaftarkan user
      description: |-
        registrasi yang sukses akan mengirimkan link verifikasi ke email pengguna.
        link tersebut mengarah ke front end kemudian front end akan
      parameters:
        - name: token
          in: path
          description: token dari hasil registrasi
          required: true
          schema:
            type: string
      responses:
        "200":
          description: verifikasi token hasil registrasi berhasil.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your Email, Verified Successfuly."
        "400":
          description: bad request, user memberikan parameter tidak sesuai format dan ketentuan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bad Request"
        "401":
          description: token bermasalah
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid Token"
        "409":
          description: Email sudah diverifikasi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your Email Already Verified"
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "error verifying user's email verification token"
  /auth/login:
    post:
      summary: login untuk mendapatkan akses token
      description: |-
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Login berhasil, refresh token dan akses token diberikan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  statusCode:
                    type: integer
                    example: 200
                  token:
                    type: string
                    example: "your_access_token_here"
          headers:
            Set-Cookie:
              description: "Set cookies untuk refresh token."
              schema:
                type: string
                example: "refreshTokenRefresh=<refresh_token_value>; Path=/auth/refresh; HttpOnly; Secure; SameSite=Strict; Max-Age=604800"
            Set-Cookie-2:
              description: "Set cookies untuk refresh token di path logout."
              schema:
                type: string
                example: "refreshTokenLogout=<refresh_token_value>; Path=/auth/logout; HttpOnly; Secure; SameSite=Strict; Max-Age=604800"
        409:
          description: credential invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Credential Invalid, Please Check Your Input Credential"
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unidentified Error While Login User"
  /auth/refresh:
    post:
      summary: login untuk mendapatkan akses token
      description: |-
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Login berhasil, refresh token dan akses token diberikan.
          content:
  /auth/logout:

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Register:
      type: object
      properties:
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: johndoe@example.com
        password:
          type: string
          format: password
          example: password123
      required: # Properti yang wajib diisi
        - username
        - email
        - password
    RegisterConflict:
      oneOf:
        - type: object
          properties:
            message:
              type: string
              example: "Email already registered."
        - type: object
          properties:
            message:
              type: string
              example: "Username already registered."
    Login:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
              format: email
              example: rebel@gmail.com
            - type: string
              example: jonh doe
        password:
          type: string
          format: password
          example: password123
      required: # Properti yang wajib diisi
        - identifier
        - password
